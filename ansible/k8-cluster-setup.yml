---
- name: Initialize Kubernetes cluster with fixed kubelet
  hosts: master
  become: yes
  vars:
    master_ip: "{{ hostvars['vm1']['ansible_host'] }}"
    
  tasks:
    - name: Create kubeadm config
      ansible.builtin.copy:
        dest: /tmp/kubeadm-config.yaml
        content: |
          apiVersion: kubeadm.k8s.io/v1beta3
          kind: InitConfiguration
          localAPIEndpoint:
            advertiseAddress: "{{ master_ip }}"
            bindPort: 6443
          nodeRegistration:
            criSocket: "unix:///run/cri-dockerd.sock"
            imagePullPolicy: IfNotPresent
          ---
          apiVersion: kubeadm.k8s.io/v1beta3
          kind: ClusterConfiguration
          kubernetesVersion: v1.28.0
          controlPlaneEndpoint: "{{ master_ip }}:6443"
          networking:
            serviceSubnet: "10.96.0.0/12"
            podSubnet: "10.244.0.0/16"
            dnsDomain: "cluster.local"
          ---
          apiVersion: kubelet.config.k8s.io/v1beta1
          kind: KubeletConfiguration
          cgroupDriver: systemd
          containerRuntimeEndpoint: "unix:///run/cri-dockerd.sock"
        owner: root
        group: root
        mode: '0644'

    - name: Pull Kubernetes images
      ansible.builtin.shell:
        cmd: |
          kubeadm config images pull --config=/tmp/kubeadm-config.yaml
        ignore_errors: yes

    - name: Initialize Kubernetes cluster
      ansible.builtin.shell:
        cmd: |
          kubeadm init --config=/tmp/kubeadm-config.yaml --ignore-preflight-errors=all
      args:
        creates: /etc/kubernetes/admin.conf

    - name: Set up kubectl for cc user
      ansible.builtin.shell:
        cmd: |
          mkdir -p /home/cc/.kube
          cp -i /etc/kubernetes/admin.conf /home/cc/.kube/config
          chown cc:cc /home/cc/.kube/config
        creates: /home/cc/.kube/config

    - name: Install Flannel network plugin
      ansible.builtin.shell:
        cmd: kubectl apply -f https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml
        become_user: cc

    - name: Remove master taint
      ansible.builtin.shell:
        cmd: kubectl taint nodes --all node-role.kubernetes.io/control-plane-
        become_user: cc

    - name: Generate join command
      ansible.builtin.shell:
        cmd: kubeadm token create --print-join-command > /home/cc/join-command.sh
      args:
        creates: /home/cc/join-command.sh

- name: Join worker nodes
  hosts: workers
  become: yes
  tasks:
    - name: Get join command from master
      ansible.builtin.fetch:
        src: /home/cc/join-command.sh
        dest: /tmp/join-command.sh
        flat: yes

    - name: Join worker to cluster
      ansible.builtin.shell:
        cmd: "bash /tmp/join-command.sh --ignore-preflight-errors=all"
      args:
        creates: /etc/kubernetes/kubelet.conf