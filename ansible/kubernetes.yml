---
- name: Install and configure Kubernetes on Ubuntu
  hosts: k8s_cluster
  become: yes
  vars:
    kube_version: "1.28"
    container_runtime: "docker"

  tasks:
    - name: Disable swap
      shell: |
        swapoff -a
        if grep -q swap /etc/fstab; then
          sed -i '/ swap / s/^/#/' /etc/fstab
        fi

    - name: Load required kernel modules
      modprobe:
        name: "{{ item }}"
        state: present
      loop:
        - br_netfilter
        - overlay

    - name: Configure kernel parameters for Kubernetes
      copy:
        dest: /etc/sysctl.d/99-kubernetes.conf
        content: |
          net.bridge.bridge-nf-call-iptables = 1
          net.bridge.bridge-nf-call-ip6tables = 1
          net.ipv4.ip_forward = 1
        mode: '0644'

    - name: Apply sysctl settings
      command: sysctl --system
      changed_when: false

    - name: Install required packages for Ubuntu
      apt:
        name:
          - curl
          - gnupg
          - apt-transport-https
          - ca-certificates
        state: present
        update_cache: yes

    - name: Add Kubernetes GPG key (fast version)
      shell: |
        mkdir -p /etc/apt/keyrings
        curl -fsSL https://packages.cloud.google.com/apt/doc/apt-key.gpg | gpg --dearmor -o /etc/apt/keyrings/kubernetes-archive-keyring.gpg
   

    - name: Add Kubernetes repository (standard repo)
      shell: |
        echo "deb [signed-by=/etc/apt/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" > /etc/apt/sources.list.d/kubernetes.list
    

    - name: Update package cache
      apt:
        update_cache: yes
        cache_valid_time: 3600
    - name: Add Kubernetes repository (correct format)
      shell: |
        echo "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v{{ kube_version }}/deb/ /" | \
        tee /etc/apt/sources.list.d/kubernetes.list

    - name: Update apt package cache
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install Kubernetes components
      apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present
        update_cache: yes

    - name: Hold Kubernetes packages at current version
      command: apt-mark hold kubelet kubeadm kubectl
      changed_when: false

    - name: Enable kubelet service
      systemd:
        name: kubelet
        enabled: yes
        daemon_reload: yes

    - name: Configure kubelet cgroup driver for Docker
      lineinfile:
        path: /etc/default/kubelet
        line: 'KUBELET_EXTRA_ARGS=--cgroup-driver=systemd'
        create: yes

    - name: Create kubeadm configuration directory
      file:
        path: /etc/kubernetes
        state: directory
        mode: '0755'

    - name: Verify Kubernetes components are installed
      block:
        - name: Check if components are installed
          command: "{{ item }}"
          loop:
            - kubeadm
            - kubectl  
            - kubelet
          register: component_check
          changed_when: false
        
        - name: Show component status
          debug:
            msg: "{{ item.item }}: {{ 'INSTALLED' if item.rc == 0 or item.rc == 1 else 'MISSING' }}"
          loop: "{{ component_check.results }}"