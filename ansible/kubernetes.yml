---
- name: Clean Kubernetes installation
  hosts: k8s_cluster
  become: yes
  tasks:
    - name: Remove existing Kubernetes packages
      ansible.builtin.apt:
        name:
          - kubeadm
          - kubelet
          - kubectl
        state: absent
        purge: yes

    - name: Remove Kubernetes repository
      ansible.builtin.file:
        path: /etc/apt/sources.list.d/kubernetes.list
        state: absent

    - name: Update package cache
      ansible.builtin.apt:
        update_cache: yes

    - name: Install prerequisites
      ansible.builtin.apt:
        name:
          - curl
          - gnupg
        state: present

    - name: Add Kubernetes GPG key
      ansible.builtin.apt_key:
        url: https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key
        state: present

    - name: Add Kubernetes repository
      ansible.builtin.apt_repository:
        repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /"
        state: present

    - name: Install Kubernetes components
      ansible.builtin.apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present
        update_cache: yes

    - name: Hold Kubernetes packages
      ansible.builtin.shell:
        cmd: apt-mark hold kubelet kubeadm kubectl

    - name: Disable swap
      ansible.builtin.shell:
        cmd: swapoff -a
      ignore_errors: yes

    - name: Remove swap from fstab
      ansible.builtin.replace:
        path: /etc/fstab
        regexp: '^.*swap.*$'
        replace: '#\0'

    - name: Configure sysctl
      ansible.builtin.sysctl:
        name: "{{ item.name }}"
        value: "{{ item.value }}"
        state: present
        reload: yes
      loop:
        - { name: net.bridge.bridge-nf-call-iptables, value: '1' }
        - { name: net.ipv4.ip_forward, value: '1' }

    - name: Ensure kubelet service directory exists
      ansible.builtin.file:
        path: /usr/lib/systemd/system/kubelet.service.d
        state: directory
        owner: root
        group: root
        mode: '0755'

    - name: Create proper kubelet service drop-in
      ansible.builtin.copy:
        dest: /usr/lib/systemd/system/kubelet.service.d/10-kubeadm.conf
        content: |
          # Note: This dropin only works with kubeadm and kubelet v1.11+
          [Service]
          Environment="KUBELET_KUBECONFIG_ARGS=--bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --kubeconfig=/etc/kubernetes/kubelet.conf"
          Environment="KUBELET_CONFIG_ARGS=--config=/var/lib/kubelet/config.yaml"
          # This is a file that "kubeadm init" and "kubeadm join" generates at runtime, populating the KUBELET_KUBEADM_ARGS variable dynamically
          EnvironmentFile=-/var/lib/kubelet/kubeadm-flags.env
          # This is a file that the user can use for overrides of the kubelet args as a last resort. Preferably, the user should use
          # the .NodeRegistration.KubeletExtraArgs object in the configuration files instead. KUBELET_EXTRA_ARGS should be sourced from this file.
          EnvironmentFile=-/etc/sysconfig/kubelet
          ExecStart=
          ExecStart=/usr/bin/kubelet $KUBELET_KUBECONFIG_ARGS $KUBELET_CONFIG_ARGS $KUBELET_KUBEADM_ARGS $KUBELET_EXTRA_ARGS
        owner: root
        group: root
        mode: '0644'

    - name: Enable kubelet service
      ansible.builtin.systemd:
        name: kubelet
        state: started
        enabled: yes
        daemon_reload: yes